% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sspower.multi.3level.R
\name{sspower.multi.3level}
\alias{sspower.multi.3level}
\title{Sample Size and Power Calculations for Three-Level Cluster Randomized Trials with Multivariate Effect Modifiers}
\usage{
sspower.multi.3level(power = 0.8,
                     nc = NULL,
                     alpha = 0.05,
                     pi = 0.5,
                     sigma2x = diag(rep(1,3)),
                     sigma2y = 1,
                     rho0 = diag(0.02,3),
                     rho1 = diag(0.02,3),
                     alpha0 = 0.02,
                     alpha1 = 0.02,
                     m = 50,
                     ns = 6,
                     eff = rep(0.5,3),
                     random.level = "cluster",
                     max.ss = 10^6,
                     verbose = TRUE)
}
\arguments{
\item{power}{A numeric value between 0 and 1 specifying the desired power level for sample size estimation. Default is \code{0.8}.}

\item{nc}{A numeric value specifying the number of clusters provided by the user to estimate the achievable power. Default is \code{NULL}.}

\item{alpha}{A numeric value between 0 and 1 representing the type I error rate. Default is \code{0.05}.}

\item{pi}{A rational number between 0 and 1 indicating the proportion of treated units at the randomization level. Default is \code{0.5}, representing balanced allocation.}

\item{sigma2x}{A positive-definite covariance matrix for the marginal effect modifiers. Default is \code{diag(rep(1,3))}.}

\item{sigma2y}{A positive numeric value for the conditional variance of the continuous outcome. Default is \code{1}.}

\item{rho0}{A cross-correlation matrix with elements between 0 and 1 representing the intraclass correlation coefficients (ICCs) for within-subcluster covariates. Default is \code{diag(0.02,3)}.}

\item{rho1}{A cross-correlation matrix with elements between 0 and 1 representing the intraclass correlation coefficients (ICCs) for between-subcluster covariates. Default is \code{diag(0.02,3)}.}

\item{alpha0}{A numeric value between 0 and 1 representing the ICC for within-subcluster outcome variability. Default is \code{0.02}.}

\item{alpha1}{A numeric value between 0 and 1 representing the ICC for between-subcluster outcome variability. Default is \code{0.02}.}

\item{m}{A numeric value greater than 2 specifying the number of participants per subcluster. Default is \code{50}.}

\item{ns}{A numeric value greater than 2 specifying the number of subclusters per cluster. Default is \code{6}.}

\item{eff}{A nonzero vector of numeric values for the (unstandardized) effect size of the target estimand. The effect size can optionally be standardized relative to \code{sigma2y}, the
conditional variance of the outcome. Default is \code{rep(0.5,3)}.}

\item{random.level}{A character string specifying the level of randomization. Supported values are \code{"cluster"} (randomization at the cluster level),
\code{"subcluster"} (randomization at the subcluster level), and \code{"individual"} (individual-level randomization). Default is \code{"cluster"}.}

\item{max.ss}{A numeric value specifying the maximum number of clusters to be searched. Default is \code{10^6}.}

\item{verbose}{A logical value indicating whether parameter reiterations and supplementary messages should be displayed (\code{TRUE}) or suppressed (\code{FALSE}). Default is \code{TRUE}.}
}
\value{
The function \code{sspower.multi.3level} returns one of two outputs: either an integer specifying the required number of clusters along with the actual power achieved
(slightly larger than the specified power), or a decimal value representing the achieved power based on the provided sample size. The power is calculated to four decimal places.
Informative messages summarizing key parameter choices and results are displayed by default.
}
\description{
The function \code{sspower.multi.3level} calculates either the required number of clusters or the achieved power for three-level cluster randomized
trials (CRTs) with multivariate effect modifiers (dimension greater than or equal to 2). It accommodates randomization at the cluster, subcluster, or individual level
and supports hypothesis testing for the heterogeneous treatment effects (HTEs). Users can specify the number of clusters (level-3) using the \code{nc} argument.
If this argument is provided, the function calculates power for the specified hypothesis test and disregards any input for the power parameter. If the number of
clusters is not provided, the function computes the required number of clusters to achieve a specified power threshold, which defaults to 0.8.
}
\details{
This method calculates the variances of the effects of interest using Generalized Least Squares estimators and large-sample approximations, based on the input parameters.
These variances are subsequently applied to construct classic sample size or power formulas, supporting calculations for both objectives.
The approach accommodates three levels of randomization—cluster, subcluster, and individual—and primarily focuses on heterogeneous treatment effects (HTE),
as outlined in the paper "Planning Three-Level Cluster Randomized Trials to Assess Treatment Effect Heterogeneity" by Li et al.
Notably, when the target estimand is the average treatment effect (ATE), the sample size and power calculations are consistent with those derived from \code{sspower.3level},
as the intraclass correlation coefficients (ICCs) of the covariates do not affect these computations.
}
\examples{
# Predict the achieved power for 20 clusters with default parameter values.
power.example <- sspower.multi.3level(power = 0.8,
                                      nc = 20,
                                      alpha = 0.05,
                                      pi = 0.5,
                                      sigma2x = diag(rep(1,3)),
                                      sigma2y = 1,
                                      rho0 = diag(0.02,3),
                                      rho1 = diag(0.02,3),
                                      alpha0 = 0.02,
                                      alpha1 = 0.02,
                                      m = 50,
                                      ns = 6,
                                      eff = rep(0.5,3),
                                      random.level = "cluster",
                                      max.ss = 10^6,
                                      verbose = TRUE)

print(power.example)

}
